{"version":3,"sources":["webpack://hee-dev-blog/./src/components/index/PostCard.tsx","webpack://hee-dev-blog/./src/pages/index.tsx"],"names":["Card","styled","BORDER_RADIUS","Layout","Title","Sample","WrittenIn","Image","PostCard","path","title","writtenIn","thumbnailSrc","sample","Link","to","src","CardListLayout","Index","posts","data","allMarkdownRemark","nodes","map","post","idx","fields","slug","meta","frontmatter","thumbnail","publicURL","key","date","description"],"mappings":"uMAcMA,EAAOC,oBAAH,0DAAGA,CAAH,uOAIYC,OAWhBC,EAASF,oBAAH,4DAAGA,CAAH,wBAING,EAAQH,mBAAH,2DAAGA,CAAH,sDAMLI,EAASJ,kBAAH,4DAAGA,CAAH,sEAONK,EAAYL,qBAAH,+DAAGA,CAAH,gEAOTM,EAAQN,oBAAH,2DAAGA,CAAH,wGAIqBC,MACGA,OAGpB,SAASM,EAAT,GAAuF,IAAnEC,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,OACvE,OACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIN,GACR,gBAACT,EAAD,KACE,gBAAC,EAAD,KACE,gBAACI,EAAD,KAAQM,GACR,gBAACL,EAAD,KAASQ,GACT,gBAACP,EAAD,KAAYK,IAEbC,GAAgB,gBAACL,EAAD,CAAOS,IAAKJ,MC7CrC,IAAMK,EAAiBhB,oBAAH,iEAAGA,CAAH,2CAML,SAASiB,EAAT,GAA+C,IACtDC,EADqD,EAA7BC,KACXC,kBAAkBC,MAErC,OACE,gBAACnB,EAAA,EAAD,KACE,gBAACc,EAAD,KACGE,EAAMI,KAAI,SAACC,EAAMC,GAChB,IAAMhB,EAAOe,EAAKE,OAAOC,KACnBC,EAAOJ,EAAKK,YACZjB,EAAegB,EAAKE,UAAY,CAAElB,aAAcgB,EAAKE,UAAUC,WAAc,KAEnF,OACE,gBAACvB,EAAD,eACEwB,IAAKP,EACLhB,KAAMA,EACNC,MAAOkB,EAAKlB,MACZC,UAAWiB,EAAKK,KAChBpB,OAAQe,EAAKM,aACTtB","file":"component---src-pages-index-tsx-286388469e09ae510db2.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\ntype PostSampleProps = {\n  path: string;\n  title: string;\n  writtenIn: string;\n  sample?: string;\n  thumbnailSrc?: string;\n}\n\nconst BORDER_RADIUS = 4;\n\nconst Card = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 8em;\n  max-height: 8em;\n  border-radius: ${`${BORDER_RADIUS}px`};\n  margin: 0.6em 0.4em;\n  border: 1px solid #DDD;\n  transition: border-color,box-shadow 0.2s ease-in;\n\n  &:hover {\n    border-color: #2B2725;\n    box-shadow: 1px 1px 2px #666564;\n  }\n`;\n\nconst Layout = styled.div`\n  padding: 0.6em 1em;\n`;\n\nconst Title = styled.h2`\n  font-weight: bold;\n  margin-top: 0;\n  margin-bottom: 4px;\n`;\n\nconst Sample = styled.p`\n  margin-top: 0.2em;\n  margin-bottom: 0.6em;\n  font-size: 0.9em;\n  color: #777;\n`;\n\nconst WrittenIn = styled.span`\n  display: block;\n  margin-top: 0.2em;\n  font-size: 0.8em;\n  color: #AAA;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-top-right-radius: ${`${BORDER_RADIUS - 1}px`};\n  border-bottom-right-radius: ${`${BORDER_RADIUS - 1}px`};\n`;\n\nexport default function PostCard({ path, title, writtenIn, thumbnailSrc, sample } : PostSampleProps) {\n  return (\n    <Link to={path}>\n      <Card>\n        <Layout>\n          <Title>{title}</Title>\n          <Sample>{sample}</Sample>\n          <WrittenIn>{writtenIn}</WrittenIn>\n        </Layout>\n        {thumbnailSrc && <Image src={thumbnailSrc} />}\n      </Card>\n    </Link>\n  );\n}\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/Layout'\nimport PostCard from '../components/index/PostCard';\nimport styled from 'styled-components';\n\ntype IndexData = {\n  allMarkdownRemark: {\n    nodes: Array<{\n      // excerpt\n      fields: {\n        slug: string\n      }\n      frontmatter: {\n        date: string\n        title: string\n        thumbnail?: {\n          publicURL: string\n        }\n        description: string\n      }\n    }>\n  }\n}\n\nconst CardListLayout = styled.div`\n  display: grid;\n  width: 80%;\n  margin: 0 auto;\n`;\n\nexport default function Index({ data }: { data: IndexData }) {\n  const posts = data.allMarkdownRemark.nodes;\n\n  return (\n    <Layout>\n      <CardListLayout>\n        {posts.map((post, idx) => {\n          const path = post.fields.slug;\n          const meta = post.frontmatter;\n          const thumbnailSrc = meta.thumbnail ? { thumbnailSrc: meta.thumbnail.publicURL } : null;\n\n          return (\n            <PostCard\n              key={idx}\n              path={path}\n              title={meta.title}\n              writtenIn={meta.date}\n              sample={meta.description}\n              {...thumbnailSrc}\n            />\n          );\n        })}\n      </CardListLayout>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          thumbnail {\n            publicURL\n          }\n          description\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}