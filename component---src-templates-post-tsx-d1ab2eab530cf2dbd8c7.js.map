{"version":3,"sources":["webpack://hee-dev-blog/./src/components/posts/PostTitle.tsx","webpack://hee-dev-blog/./src/components/posts/PostNavigator.tsx","webpack://hee-dev-blog/./src/components/posts/TableOfContents.tsx","webpack://hee-dev-blog/./src/components/posts/PostSidebar.tsx","webpack://hee-dev-blog/./src/templates/Post.tsx"],"names":["PostTitle","title","date","className","PostNavigator","prev","next","Link","to","fields","slug","frontmatter","TableOfContents","tocHtml","dangerouslySetInnerHTML","__html","PostSidebar","Post","data","post","article","postDetails","prevArticle","previous","nextArticle","tableOfContents","toc","Layout","meta","html"],"mappings":"qLAIe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,KAKA,OACE,gCACE,sBAAIC,UAAU,qBAAqBF,GACnC,wBAAME,UAAU,0BAA0BD,I,cCKjC,SAASE,EAAT,GAAmD,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAC5C,OAAKD,GAASC,EAKZ,gCACE,uBAAKH,UAAU,6BACf,uBAAKA,UAAU,0BACZE,GACC,gBAAC,EAAAE,KAAD,CACEC,GAAE,IAAMH,EAAKI,OAAOC,MADtB,KAEOL,EAAKM,YAAYV,OAEzBK,GACC,gBAAC,EAAAC,KAAD,CACEC,GAAE,IAAMF,EAAKG,OAAOC,MACjBJ,EAAKK,YAAYV,MAFtB,QAbC,iCCjBI,SAASW,EAAT,GAA4D,IAAjCC,EAAgC,EAAhCA,QACxC,OACE,uBAAKV,UAAU,eACb,uBAAKA,UAAU,qBACb,wBAAMA,UAAU,cAAhB,MACA,uBAAKA,UAAU,qBAGjB,uBAAKW,wBAAyB,CAAEC,OAAQF,MCH/B,SAASG,EAAT,GAAiD,IAA1BH,EAAyB,EAAzBA,QACpC,OACE,uBAAKV,UAAU,wBACb,yBAAOA,UAAU,kCACf,gBAACS,EAAD,CAAiBC,QAASA,MCiBnB,SAASI,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,KACvBC,EAAOD,EAAKE,QACZC,EAAcF,EAAKR,YACPW,EAAmCJ,EAA7CK,SAA6BC,EAAgBN,EAAtBZ,KACzBmB,EAAkBP,EAAKQ,IAAID,gBAEjC,OACE,gBAACE,EAAA,EAAD,CAAQC,KAAMP,GACZ,uBAAKlB,UAAU,gBACb,2BAASA,UAAU,wBACjB,gBAACH,EAAD,CAAWC,MAAOoB,EAAYpB,MAAOC,KAAMmB,EAAYnB,OACvD,uBAAKY,wBAAyB,CAAEC,OAAQI,EAAKU,QAC7C,gBAACzB,EAAD,CAAeC,KAAMiB,EAAahB,KAAMkB,KAG1C,gBAACR,EAAD,CAAaH,QAASY","file":"component---src-templates-post-tsx-d1ab2eab530cf2dbd8c7.js","sourcesContent":["import React from 'react';\n\nimport '@styles/components/posts/postTitle.scss';\n\nexport default function PostTitle({\n  title,\n  date,\n}: {\n  title: string;\n  date: string;\n}) {\n  return (\n    <>\n      <h1 className=\"post-title__title\">{title}</h1>\n      <span className=\"post-title__written-in\">{date}</span>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport '@styles/components/posts/postNavigator.scss';\n\nexport type AnotherArticle = {\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n  };\n};\n\ninterface PostProps {\n  prev?: AnotherArticle;\n  next?: AnotherArticle;\n}\n\nexport default function PostNavigator({ prev, next }: PostProps) {\n  if (!prev && !next) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"post-navigator__top-line\" />\n      <div className=\"post-navigator__layout\">\n        {prev && (\n          <Link\n            to={`/${prev.fields.slug}`}\n          >{`< ${prev.frontmatter.title}`}</Link>\n        )}\n        {next && (\n          <Link\n            to={`/${next.fields.slug}`}\n          >{`${next.frontmatter.title} >`}</Link>\n        )}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport '@styles/components/posts/tableOfContents.scss';\n\nexport default function TableOfContents({ tocHtml }: { tocHtml: string }) {\n  return (\n    <div className=\"toc__layout\">\n      <div className=\"toc__title-layout\">\n        <span className=\"toc__title\">목차</span>\n        <div className=\"toc__right-line\" />\n      </div>\n\n      <div dangerouslySetInnerHTML={{ __html: tocHtml }} />\n    </div>\n  );\n}\n","import React from 'react';\nimport TableOfContents from './TableOfContents';\n\nimport '@styles/components/posts/postSidebar.scss';\n\ninterface SidebarProps {\n  tocHtml: string;\n}\n\nexport default function PostSidebar({ tocHtml }: SidebarProps) {\n  return (\n    <div className=\"post-sidebar__layout\">\n      <aside className=\"post-sidebar__floating-sidebar\">\n        <TableOfContents tocHtml={tocHtml} />\n      </aside>\n    </div>\n  );\n}\n","import { graphql } from 'gatsby';\nimport * as React from 'react';\n\nimport Layout from '@components/Layout';\nimport PostTitle from '@components/posts/PostTitle';\nimport PostNavigator, { AnotherArticle } from '@components/posts/PostNavigator';\nimport PostSidebar from '@components/posts/PostSidebar';\n\nimport '@styles/templates/post.scss';\n\ninterface PostProps {\n  data: {\n    article: {\n      html: string;\n      frontmatter: {\n        title: string;\n        description: string;\n        date: string;\n      };\n    };\n\n    toc: {\n      tableOfContents: string;\n    };\n\n    previous: AnotherArticle;\n    next: AnotherArticle;\n  };\n}\n\nexport default function Post({ data }: PostProps) {\n  const post = data.article;\n  const postDetails = post.frontmatter;\n  const { previous: prevArticle, next: nextArticle } = data;\n  const tableOfContents = data.toc.tableOfContents;\n\n  return (\n    <Layout meta={postDetails}>\n      <div className=\"post__layout\">\n        <article className=\"post__article-layout\">\n          <PostTitle title={postDetails.title} date={postDetails.date} />\n          <div dangerouslySetInnerHTML={{ __html: post.html }} />\n          <PostNavigator prev={prevArticle} next={nextArticle} />\n        </article>\n\n        <PostSidebar tocHtml={tableOfContents} />\n      </div>\n    </Layout>\n  );\n}\n\nexport const postQuery = graphql`\n  query PostBySlug($id: String!, $prevPostId: String, $nextPostId: String) {\n    article: markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        title\n        date\n        description\n      }\n    }\n    toc: markdownRemark(id: { eq: $id }) {\n      tableOfContents\n    }\n\n    previous: markdownRemark(id: { eq: $prevPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}