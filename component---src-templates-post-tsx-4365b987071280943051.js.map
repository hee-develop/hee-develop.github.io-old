{"version":3,"sources":["webpack://hee-dev-blog/./src/components/posts/PostTitle.tsx","webpack://hee-dev-blog/./src/components/posts/PostNavigator.tsx","webpack://hee-dev-blog/./src/components/posts/TableOfContents.tsx","webpack://hee-dev-blog/./src/components/posts/PostSidebar.tsx","webpack://hee-dev-blog/./src/templates/Post.tsx"],"names":["H1","styled","WrittenIn","PostTitle","title","date","NavigatorLayout","Line","PostNavigator","prev","next","Link","to","fields","slug","frontmatter","TocStyle","TocTitleLayout","TocTitle","RightLine","TableOfContents","tocHtml","dangerouslySetInnerHTML","__html","Layout","FloatingSidebar","PostSidebar","PostLayout","ArticleLayout","Post","data","post","article","postDetails","prevArticle","previous","nextArticle","tableOfContents","toc","meta","html"],"mappings":"6LAGMA,EAAKC,mBAAH,qDAAGA,CAAH,mDAMFC,EAAYD,qBAAH,4DAAGA,CAAH,kFAQA,SAASE,EAAT,GAAqC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KACzC,OACE,gCACE,gBAACL,EAAD,KAAKI,GACL,gBAACF,EAAD,KAAYG,I,cCjBZC,EAAkBL,oBAAH,sEAAGA,CAAH,8DAMfM,EAAON,oBAAH,2DAAGA,CAAH,kFAsBK,SAASO,EAAT,GAAmD,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAC5C,OAAKD,GAASC,EAKZ,gCACE,gBAACH,EAAD,MACA,gBAACD,EAAD,KACGG,GACC,gBAAC,EAAAE,KAAD,CAAMC,GAAE,IAAMH,EAAKI,OAAOC,MAA1B,KAAwCL,EAAKM,YAAYX,OAE1DM,GACC,gBAAC,EAAAC,KAAD,CAAMC,GAAE,IAAMF,EAAKG,OAAOC,MAAYJ,EAAKK,YAAYX,MAAvD,QAXC,iCC/BX,IAAMY,EAAWf,oBAAH,oEAAGA,CAAH,oYA2CRgB,EAAiBhB,oBAAH,0EAAGA,CAAH,yEAOdiB,EAAWjB,qBAAH,oEAAGA,CAAH,+EAORkB,EAAYlB,oBAAH,qEAAGA,CAAH,8CAKA,SAASmB,EAAT,GAA4D,IAAjCC,EAAgC,EAAhCA,QACxC,OACE,gBAACL,EAAD,KACE,gBAACC,EAAD,KACE,gBAACC,EAAD,WACA,gBAACC,EAAD,OAGF,uBACEG,wBAAyB,CAACC,OAAQF,MCtE1C,IAAMG,EAASvB,oBAAH,8DAAGA,CAAH,wCAKNwB,EAAkBxB,sBAAH,uEAAGA,CAAH,+BASN,SAASyB,EAAT,GAAiD,IAA1BL,EAAyB,EAAzBA,QACpC,OACE,gBAAC,EAAD,KACE,gBAACI,EAAD,KACE,gBAACL,EAAD,CAAiBC,QAASA,MCblC,IAAMM,EAAa1B,oBAAH,wDAAGA,CAAH,mBAIV2B,EAAgB3B,wBAAH,2DAAGA,CAAH,sBAwBJ,SAAS4B,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,KACvBC,EAAOD,EAAKE,QACZC,EAAcF,EAAKhB,YACPmB,EAAmCJ,EAA7CK,SAA6BC,EAAgBN,EAAtBpB,KACzB2B,EAAkBP,EAAKQ,IAAID,gBAEjC,OACE,gBAACb,EAAA,EAAD,CAAQe,KAAMN,GACZ,gBAACN,EAAD,KACE,gBAACC,EAAD,KACE,gBAACzB,EAAD,CAAWC,MAAO6B,EAAY7B,MAAOC,KAAM4B,EAAY5B,OACvD,uBAAKiB,wBAAyB,CAACC,OAAQQ,EAAKS,QAC5C,gBAAChC,EAAD,CAAeC,KAAMyB,EAAaxB,KAAM0B,KAG1C,gBAACV,EAAD,CACEL,QAASgB","file":"component---src-templates-post-tsx-4365b987071280943051.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst H1 = styled.h1`\n  margin: 0;\n  font-size: 2em;\n  letter-spacing: 0.01em;\n`;\n\nconst WrittenIn = styled.span`\n  display: block;\n  margin-top: 0.4em;\n  margin-left: 0.1em;\n  font-size: 0.8em;\n  color: #AAA;\n`;\n\nexport default function PostTitle({ title, date }) {\n  return (\n    <>\n      <H1>{title}</H1>\n      <WrittenIn>{date}</WrittenIn>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst NavigatorLayout = styled.div`\n  display: flex;\n  margin: 0.2em;\n  justify-content: space-between;\n`;\n\nconst Line = styled.div`\n  width: 100%;\n  background-color: #7a7673;\n  height: 1px;\n  opacity: 0.8;\n  margin: 1em 0.2em;\n`;\n\nexport type AnotherArticle = {\n  fields: {\n    slug: string\n  }\n  frontmatter: {\n    title: string\n  }\n}\n\ninterface PostProps {\n  prev?: AnotherArticle\n  next?: AnotherArticle\n}\n\nexport default function PostNavigator({ prev, next }: PostProps) {\n  if (!prev && !next) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Line />\n      <NavigatorLayout>\n        {prev &&\n          <Link to={`/${prev.fields.slug}`}>{`< ${prev.frontmatter.title}`}</Link>\n        }\n        {next &&\n          <Link to={`/${next.fields.slug}`}>{`${next.frontmatter.title} >`}</Link>\n        }\n      </NavigatorLayout>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TocStyle = styled.div`\n  line-height: 1.6;\n\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n\n    * > li {\n      margin-left: 1em;\n    }\n  }\n  p {\n    margin: 0;\n  }\n\n  a {\n    display: block;\n    position: relative;\n    width: 100%;\n    z-index: 0;\n    font-size: 0.92em;\n    letter-spacing: 0.04em;\n\n    &:hover::before {\n      opacity: 0.2;\n    }\n\n    &::before {\n      position: absolute;\n      bottom: 2px;\n      right: 0;\n      width: calc(100% + 0.2em);\n      height: 4px;\n      content: '';\n      background: #7a7673;\n      opacity: 0;\n      z-index: -1;\n      transition: opacity 0.1s ease-in;\n    }\n  }\n`;\n\nconst TocTitleLayout = styled.div`\n  display: flex;\n  align-items: center;\n  user-select: none;\n  margin-bottom: 4px;\n`;\n\nconst TocTitle = styled.span`\n  font-weight: bold;\n  min-width: 2.2em;\n  margin-right: 0.2em;\n  letter-spacing: 0.1em;\n`;\n\nconst RightLine = styled.div`\n  width: 100%;\n  border-top: 1px solid #2b2725;\n`;\n\nexport default function TableOfContents({ tocHtml }: { tocHtml: string }) {\n  return (\n    <TocStyle>\n      <TocTitleLayout>\n        <TocTitle>목차</TocTitle>\n        <RightLine />\n      </TocTitleLayout>\n\n      <div\n        dangerouslySetInnerHTML={{__html: tocHtml}}\n      />\n    </TocStyle>\n  )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport TableOfContents from './TableOfContents';\n\nconst Layout = styled.div`\n  min-width: 20%;\n  padding: 0.2em 0.6em;\n`;\n\nconst FloatingSidebar = styled.aside`\n  position: sticky;\n  top: 60px;\n`;\n\ninterface SidebarProps {\n  tocHtml: string\n}\n\nexport default function PostSidebar({ tocHtml }: SidebarProps) {\n  return (\n    <Layout>\n      <FloatingSidebar>\n        <TableOfContents tocHtml={tocHtml} />\n      </FloatingSidebar>\n    </Layout>\n  );\n}\n","import { graphql } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport Layout from '../components/Layout';\nimport PostTitle from '../components/posts/PostTitle'\nimport PostNavigator, { AnotherArticle } from '../components/posts/PostNavigator';\nimport PostSidebar from '../components/posts/PostSidebar';\nimport MetaType from '../types/meta';\n\nconst PostLayout = styled.div`\n  display: flex;\n`;\n\nconst ArticleLayout = styled.article`\n  padding: 0 1.2em;\n`;\n\ninterface PostProps {\n  data: {\n    article: {\n      html: string\n      frontmatter: {\n        title: string\n        description: string\n        date: string\n      }\n    }\n\n    toc: {\n      tableOfContents: string\n    }\n\n    previous: AnotherArticle\n    next: AnotherArticle\n  }\n}\n\nexport default function Post({ data }: PostProps) {\n  const post = data.article;\n  const postDetails = post.frontmatter;\n  const { previous: prevArticle, next: nextArticle } = data;\n  const tableOfContents = data.toc.tableOfContents;\n\n  return (\n    <Layout meta={postDetails}>\n      <PostLayout>\n        <ArticleLayout>\n          <PostTitle title={postDetails.title} date={postDetails.date} />\n          <div dangerouslySetInnerHTML={{__html: post.html}} />\n          <PostNavigator prev={prevArticle} next={nextArticle} />\n        </ArticleLayout>\n\n        <PostSidebar\n          tocHtml={tableOfContents}\n        />\n      </PostLayout>\n    </Layout>\n  );\n}\n\nexport const postQuery = graphql`\n  query PostBySlug(\n    $id: String!\n    $prevPostId: String\n    $nextPostId: String\n  ) {\n    article: markdownRemark(id: { eq: $id }) {\n      html,\n      frontmatter {\n        title\n        date\n        description\n      }\n    }\n    toc: markdownRemark(id: { eq: $id }) {\n      tableOfContents\n    }\n\n    previous: markdownRemark(id: { eq: $prevPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}